# Generated by Django 4.1.7 on 2023-04-15 18:57

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion
import products.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('full_name', models.CharField(max_length=100)),
                ('logo_path', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('fe_id', models.CharField(max_length=4, unique=True)),
                ('name', models.CharField(max_length=40)),
                ('desc', models.TextField()),
                ('image', models.ImageField(null=True, upload_to=products.models.get_upload_path_cat)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='products.category')),
                ('related_categories', models.ManyToManyField(blank=True, to='products.category')),
            ],
        ),
        migrations.CreateModel(
            name='FilterOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_name', models.CharField(max_length=60)),
                ('display_name', models.CharField(max_length=30)),
                ('categories', models.ManyToManyField(to='products.category')),
            ],
        ),
        migrations.CreateModel(
            name='FilterTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('checked', models.BooleanField(default=True)),
                ('filter_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='products.filteroption')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=120)),
                ('slug', models.CharField(max_length=32, unique=True)),
                ('average_rating', models.FloatField(blank=True, null=True)),
                ('n_ratings', models.PositiveIntegerField(default=0)),
                ('n_stock', models.PositiveIntegerField(default=100)),
                ('base_cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('daily_cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('insurance_base_cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('insurance_daily_cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prod_brand', to='products.brand')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.category')),
                ('filter_tags', models.ManyToManyField(blank=True, to='products.filtertag')),
                ('frequently_bought_with', models.ManyToManyField(blank=True, to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(blank=True, max_length=120)),
                ('sku', models.CharField(editable=False, max_length=120, unique=True)),
                ('purchase_date', models.DateField()),
                ('last_rented_date', models.DateField(blank=True, null=True)),
                ('current_location', models.CharField(default='Myrtle Beach, NC', max_length=30)),
                ('rented_dates', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ranges.DateRangeField(), blank=True, null=True, size=None)),
                ('condition', models.CharField(choices=[('D', 'Damaged'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('N', 'New')], default='N', max_length=1)),
                ('active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('verified_purchaser', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('recommended', models.BooleanField(default=True)),
                ('header', models.CharField(max_length=30)),
                ('body', models.TextField()),
                ('reported', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductMInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_desc', models.TextField(validators=[products.models.ProductMInfo.validate_max_desc])),
                ('bullets', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=40), default=list, size=None)),
                ('prod_desc', models.TextField()),
                ('highlights', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('add_info_msrp', models.DecimalField(decimal_places=2, max_digits=8)),
                ('add_info_manu', models.CharField(max_length=20)),
                ('ranking', models.IntegerField(blank=True, null=True)),
                ('rank_link', models.CharField(blank=True, max_length=60, null=True)),
                ('specs', models.JSONField()),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='product_info', to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('caption', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(upload_to=products.models.get_upload_path_prod)),
                ('is_main_image', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='main_image',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_as_main', to='products.productimage'),
        ),
    ]
